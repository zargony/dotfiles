#!/bin/sh
#
# Automatic SSH jump host if destination is not reachable directly.
#
# Usage: autoproxy [-6] [-r] <host> <port> <jumphost>
#
# Autoproxy determine if <host> if reachable directly (using ping)
# and tries to establish a direct connection to the given <port>.
# If <host> is unreachable (e.g. because the name does not resolve
# or its address is unreachable), it tries to establish a connection
# to the given <jumphost> instead. With option -r, the <host> is
# connected from <jumphost>.
#
# Use it as a `ProxyCommand` in `~/.ssh/config`:
#
#    ProxyCommand ~/.ssh/autoproxy %h %p server.mydomain.com
#

HOST_CMD="host -t A"
PING_CMD="ping -c1 -q -W1"
NC_OPTS=""
RELAY=false
SSH_OPTS="-q"

while true; do
    case "$1" in
        -6)
            HOST_CMD="host -t AAAA"
            PING_CMD="ping6 -c1 -q"
            NC_OPTS="${NC_OPTS} -6"
            SSH_OPTS="${SSH_OPTS} -6"
            shift
            ;;
        -r)
            RELAY=true
            shift
            ;;
        -*)
            echo "Unknown option '$1'" 1>&2
            exit 1
            ;;
        *)
            break
            ;;
    esac
done

run() {
    #echo "autoproxy: running '$*'" 1>&2
    $*
}

if run ${HOST_CMD} $1 >/dev/null 2>&1 && run ${PING_CMD} $1 >/dev/null 2>&1; then
    echo "autoproxy: host '$1' seems reachable, connecting..." 1>&2
    run exec nc ${NC_OPTS} $1 $2
elif ${RELAY}; then
    echo "autoproxy: host '$1' unreachable, relaying via '$3'..." 1>&2
    #run exec ssh ${SSH_OPTS} $3 "nc ${NC_OPTS} $1 $2"
    run exec ssh ${SSH_OPTS} -W $1:$2 $3
else
    echo "autoproxy: host '$1' unreachable, using '$3' instead..." 1>&2
    run exec nc ${NC_OPTS} $3 $4
fi
